// Code generated by protoc-gen-go.
// source: queue.proto
// DO NOT EDIT!

/*
Package queue is a generated protocol buffer package.

It is generated from these files:
	queue.proto

It has these top-level messages:
	AddRoomReq
	RemRoomReq
	Response
*/
package queue

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type StatusCode int32

const (
	StatusCode_Ok               StatusCode = 0
	StatusCode_Error            StatusCode = 1
	StatusCode_ResourceNotFound StatusCode = 2
)

var StatusCode_name = map[int32]string{
	0: "Ok",
	1: "Error",
	2: "ResourceNotFound",
}
var StatusCode_value = map[string]int32{
	"Ok":               0,
	"Error":            1,
	"ResourceNotFound": 2,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}
func (StatusCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AddRoomReq struct {
	RoomName     string `protobuf:"bytes,1,opt,name=roomName" json:"roomName,omitempty"`
	RoomCapacity uint64 `protobuf:"varint,2,opt,name=roomCapacity" json:"roomCapacity,omitempty"`
}

func (m *AddRoomReq) Reset()                    { *m = AddRoomReq{} }
func (m *AddRoomReq) String() string            { return proto.CompactTextString(m) }
func (*AddRoomReq) ProtoMessage()               {}
func (*AddRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RemRoomReq struct {
	RoomName string `protobuf:"bytes,1,opt,name=roomName" json:"roomName,omitempty"`
}

func (m *RemRoomReq) Reset()                    { *m = RemRoomReq{} }
func (m *RemRoomReq) String() string            { return proto.CompactTextString(m) }
func (*RemRoomReq) ProtoMessage()               {}
func (*RemRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Response struct {
	StatusCode StatusCode `protobuf:"varint,1,opt,name=statusCode,enum=queue.StatusCode" json:"statusCode,omitempty"`
	Status     string     `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*AddRoomReq)(nil), "queue.AddRoomReq")
	proto.RegisterType((*RemRoomReq)(nil), "queue.RemRoomReq")
	proto.RegisterType((*Response)(nil), "queue.Response")
	proto.RegisterEnum("queue.StatusCode", StatusCode_name, StatusCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for QueueService service

type QueueServiceClient interface {
	AddRoom(ctx context.Context, in *AddRoomReq, opts ...grpc.CallOption) (*Response, error)
	RemoveRoom(ctx context.Context, in *RemRoomReq, opts ...grpc.CallOption) (*Response, error)
}

type queueServiceClient struct {
	cc *grpc.ClientConn
}

func NewQueueServiceClient(cc *grpc.ClientConn) QueueServiceClient {
	return &queueServiceClient{cc}
}

func (c *queueServiceClient) AddRoom(ctx context.Context, in *AddRoomReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/queue.QueueService/AddRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) RemoveRoom(ctx context.Context, in *RemRoomReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/queue.QueueService/RemoveRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for QueueService service

type QueueServiceServer interface {
	AddRoom(context.Context, *AddRoomReq) (*Response, error)
	RemoveRoom(context.Context, *RemRoomReq) (*Response, error)
}

func RegisterQueueServiceServer(s *grpc.Server, srv QueueServiceServer) {
	s.RegisterService(&_QueueService_serviceDesc, srv)
}

func _QueueService_AddRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).AddRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.QueueService/AddRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).AddRoom(ctx, req.(*AddRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_RemoveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).RemoveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.QueueService/RemoveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).RemoveRoom(ctx, req.(*RemRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "queue.QueueService",
	HandlerType: (*QueueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRoom",
			Handler:    _QueueService_AddRoom_Handler,
		},
		{
			MethodName: "RemoveRoom",
			Handler:    _QueueService_RemoveRoom_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x51, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x4d, 0x42, 0x1a, 0xdb, 0xb1, 0x68, 0x1c, 0x7a, 0x28, 0x45, 0xb4, 0xe4, 0x54, 0x3c, 0xa4,
	0x10, 0x11, 0xcf, 0xb6, 0xe8, 0xb1, 0x62, 0x7a, 0xf1, 0x1a, 0x93, 0xa1, 0x14, 0x49, 0x27, 0xdd,
	0x64, 0x0b, 0xfe, 0xa1, 0x5f, 0x21, 0xe2, 0x97, 0x98, 0x6c, 0x36, 0x8d, 0x05, 0x0f, 0xbd, 0xcd,
	0xbe, 0x79, 0x6f, 0xe6, 0xcd, 0x5b, 0x38, 0xdd, 0x4a, 0x92, 0xe4, 0x67, 0x82, 0x0b, 0xc6, 0x8e,
	0x7a, 0x8c, 0x06, 0x2b, 0x5e, 0xb1, 0x42, 0xa6, 0x55, 0x55, 0x37, 0xbd, 0x57, 0x80, 0x87, 0x24,
	0x09, 0x99, 0xd3, 0x90, 0xb6, 0x38, 0x86, 0xae, 0x28, 0xcb, 0x45, 0x94, 0xd2, 0xd0, 0x1c, 0x9b,
	0x93, 0xde, 0xcc, 0xfe, 0xfc, 0xba, 0x36, 0xc2, 0x3d, 0x8a, 0x13, 0xe8, 0x57, 0xf5, 0x3c, 0xca,
	0xa2, 0x78, 0x5d, 0x7c, 0x0c, 0xad, 0x92, 0x65, 0x6b, 0xd6, 0x41, 0xc7, 0xf3, 0x01, 0x42, 0x4a,
	0x8f, 0x9e, 0xec, 0x45, 0xd0, 0x0d, 0x29, 0xcf, 0x78, 0x93, 0x13, 0xde, 0x03, 0xe4, 0x45, 0x54,
	0xc8, 0x7c, 0xce, 0x49, 0xcd, 0x3f, 0x0b, 0x2e, 0xfc, 0xfa, 0xa8, 0xe5, 0xbe, 0xa1, 0x47, 0xfc,
	0xa1, 0xe2, 0x25, 0x38, 0xf5, 0x4b, 0x19, 0x6b, 0x96, 0x68, 0xec, 0xe6, 0x0e, 0xa0, 0x55, 0xa3,
	0x03, 0xd6, 0xf3, 0xbb, 0x6b, 0x60, 0x0f, 0x3a, 0x8f, 0x42, 0xb0, 0x70, 0x4d, 0x1c, 0x80, 0x5b,
	0x7a, 0x60, 0x29, 0x62, 0x5a, 0x70, 0xf1, 0xc4, 0x72, 0x93, 0xb8, 0x56, 0x90, 0x43, 0xff, 0xa5,
	0x5a, 0xbd, 0x24, 0xb1, 0x5b, 0xc7, 0x84, 0x53, 0x38, 0xd1, 0x99, 0x61, 0x63, 0xaa, 0xcd, 0x70,
	0x74, 0xae, 0xa1, 0xe6, 0x18, 0xcf, 0xc0, 0x40, 0x45, 0xc1, 0x3b, 0x3a, 0xd0, 0xb4, 0xe9, 0xfc,
	0xa3, 0x99, 0xd9, 0xdf, 0x3f, 0x57, 0xe6, 0x9b, 0xa3, 0x7e, 0xe9, 0xf6, 0x37, 0x00, 0x00, 0xff,
	0xff, 0xe9, 0xf7, 0x53, 0xd3, 0xd1, 0x01, 0x00, 0x00,
}